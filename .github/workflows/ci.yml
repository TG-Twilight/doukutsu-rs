name: CI

on:
  push:
    branches-ignore:
      - cpp-rewrite
      - horizon-os
      - refactor
    paths-ignore:
      - ".gitignore"
      - ".github/*"
      - "**.md"
      - "LICENSE"
      - "drshorizon/**"
      - "res/**"
  workflow_dispatch:
  release:
    types:
      - released

defaults:
  run:
    shell: bash

env:
  VERSION: "0.102.0"

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: Linux x86_64
            os: ubuntu-latest
            channel: stable
            target: x86_64-unknown-linux-gnu
            target_name: linux-x64
            arch_name: x86_64
          - name: Linux ARM64
            os: ubuntu-latest
            channel: stable
            target: aarch64-unknown-linux-gnu
            target_name: linux-arm64
            arch_name: arm64
          - name: Linux ARMv7
            os: ubuntu-latest
            channel: stable
            target: armv7-unknown-linux-gnueabihf
            target_name: linux-armv7
            arch_name: armv7
          - name: Linux x86_32
            os: ubuntu-latest
            channel: stable
            target: i686-unknown-linux-gnu
            target_name: linux-x86
            arch_name: i686
          - name: Windows x64
            os: windows-latest
            channel: stable
            target: x86_64-pc-windows-msvc
            target_name: windows-x64
            arch_name: x86_64
          - name: Windows x32
            os: windows-latest
            channel: stable
            target: i686-pc-windows-msvc
            target_name: windows-x32
            arch_name: i686
          - name: macOS x64
            os: macos-latest
            channel: stable
            target: x86_64-apple-darwin
            target_name: mac-x64
            arch_name: x86_64
          - name: macOS ARM64
            os: macos-latest
            channel: stable
            target: aarch64-apple-darwin
            target_name: mac-arm64
            arch_name: arm64

    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt update && sudo apt install -y libasound2-dev libudev-dev libgl1-mesa-dev libxext-dev gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu

      - name: Setup rust toolchain
        run: |
          rustup default ${{ matrix.channel }}
          rustup target add ${{ matrix.target }}
          rustc -vV
          cargo -vV

      - name: Build
        run: |
          mkdir -p release
          if [ "${{ runner.os }}" == "macOS" ]; then
            cargo build --release --target ${{ matrix.target }}
            cp -a ./target/${{ matrix.target }}/release/doukutsu-rs release/doukutsu-rs.${{ matrix.arch_name }}
          elif [ "${{ runner.os }}" == "Windows" ]; then
            cargo build --release --locked --bin doukutsu-rs --target ${{ matrix.target }}
            cp ./target/${{ matrix.target }}/release/doukutsu-rs.exe release/doukutsu-rs.${{ matrix.arch_name }}.exe
          elif [ "${{ runner.os }}" == "Linux" ]; then
            cargo build --release --locked --bin doukutsu-rs --target ${{ matrix.target }}
            cp -a ./target/${{ matrix.target }}/release/doukutsu-rs release/doukutsu-rs.${{ matrix.arch_name }}.elf
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: doukutsu-rs_${{ matrix.target_name }}
          path: ./release/*
          if-no-files-found: error

  build_android:
    name: Android build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        abi:
          - arm64-v8a
          - armeabi-v7a
    steps:
      - uses: actions/checkout@v4
      - name: Setup rust toolchain
        run: |
          rustup default stable
          rustup target add aarch64-linux-android armv7-linux-androideabi
          cargo install cargo-ndk

      - name: Build APK for ${{ matrix.abi }}
        run: |
          cd app
          touch local.properties
          chmod +x ./gradlew
          if [ "${{ matrix.abi }}" == "arm64-v8a" ]; then
            ./gradlew assembleArm64Release
            APK_PATH=app/build/outputs/apk/arm64/release/app-arm64-v8a-release.apk
          else
            ./gradlew assembleArmeabiRelease
            APK_PATH=app/build/outputs/apk/armeabi/release/app-armeabi-v7a-release.apk
          fi
          mkdir -p ../release
          cp $APK_PATH ../release/doukutsu-rs_${{ matrix.abi }}.apk

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: doukutsu-rs_android_${{ matrix.abi }}
          path: ./release/*
          if-no-files-found: error
